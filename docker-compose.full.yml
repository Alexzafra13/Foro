version: '3.8'
services:
  # ===== BASE DE DATOS =====
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - forum_network

  # ===== PGBOUNCER =====
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    restart: unless-stopped
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_USER: ${POSTGRES_USER}
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASES_DBNAME: ${POSTGRES_DB}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 30
      MIN_POOL_SIZE: 10
      AUTH_TYPE: scram-sha-256
    ports:
      - "6432:6432"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - forum_network

  # ===== MIGRACIONES DE PRISMA =====
  migrations:
    build: .
    environment:
      - POSTGRES_DIRECT_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    command: ["npx", "prisma", "migrate", "deploy"]
    networks:
      - forum_network
    restart: "no"  # Solo ejecuta una vez

  # ===== BACKEND API =====
  backend:
    build: .
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/${POSTGRES_DB}
      - POSTGRES_DIRECT_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - PORT=3000
      - NODE_ENV=production
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS}
      - MAILER_SERVICE=${MAILER_SERVICE}
      - MAILER_EMAIL=${MAILER_EMAIL}
      - MAILER_SECRET_KEY=${MAILER_SECRET_KEY}
      - FRONTEND_URL=${FRONTEND_URL}
      - EMAIL_VERIFICATION_SECRET=${EMAIL_VERIFICATION_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - ENABLE_QUERY_LOGGING=false
      - CONNECTION_POOL_SIZE=30
    depends_on:
      - migrations
      - pgbouncer
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - forum_network



volumes:
  postgres_data:

networks:
  forum_network:
    driver: bridge